package entity;
// Generated Nov 20, 2016 9:40:14 PM by Hibernate Tools 4.3.1


import org.hibernate.search.annotations.*;
import org.hibernate.search.annotations.Index;

import javax.persistence.*;
import java.util.*;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Playlist generated by hbm2java
 */
@Entity
@Indexed
@Table(name = "PLAYLIST"
        , catalog = "musicweb"
        , uniqueConstraints = @UniqueConstraint(columnNames = "slugPlaylist")
)
public class Playlist implements java.io.Serializable {


	private static final long serialVersionUID = 1L;
	private Integer idPlaylist;
    private Category category;
    private Country country;
    private String namePlaylist;
    private String keyWord;
    private String slugPlaylist;
    private Date postDate;
    private Integer viewCount;
    private Integer likes;
    private String linkImg;
    private String infoPlaylist;
    private List<Song> songs = new ArrayList<>();
    private List<Singer> singers = new ArrayList<Singer>(0);

    public Playlist() {
    }

    public Playlist(Integer idPlaylist, Category category, Country country, String namePlaylist, String keyWord, String slugPlaylist, Date postDate, Integer viewCount, Integer likes, String linkImg, String infoPlaylist, List<Song> songs, List<Singer> singers) {
        this.idPlaylist = idPlaylist;
        this.category = category;
        this.country = country;
        this.namePlaylist = namePlaylist;
        this.keyWord = keyWord;
        this.slugPlaylist = slugPlaylist;
        this.postDate = postDate;
        this.viewCount = viewCount;
        this.likes = likes;
        this.linkImg = linkImg;
        this.infoPlaylist = infoPlaylist;
        this.songs = songs;
        this.singers = singers;
    }

    public Playlist(String namePlaylist, Date postDate, String linkImg) {
        this.namePlaylist = namePlaylist;
        this.postDate = postDate;
        this.linkImg = linkImg;
    }

    public Playlist(Category category, Country country, String namePlaylist, String keyWord, String slugPlaylist, Date postDate, Integer viewCount, Integer likes, String linkImg, String infoPlaylist, List<Song> songs, List<Singer> singers) {
        this.category = category;
        this.country = country;
        this.namePlaylist = namePlaylist;
        this.keyWord = keyWord;
        this.slugPlaylist = slugPlaylist;
        this.postDate = postDate;
        this.viewCount = viewCount;
        this.likes = likes;
        this.linkImg = linkImg;
        this.infoPlaylist = infoPlaylist;
        this.songs = songs;
        this.singers = singers;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)


    @Column(name = "idPlaylist", unique = true, nullable = false)
    public Integer getIdPlaylist() {
        return this.idPlaylist;
    }

    public void setIdPlaylist(Integer idPlaylist) {
        this.idPlaylist = idPlaylist;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "idCategory")
    public Category getCategory() {
        return this.category;
    }

    public void setCategory(Category category) {
        this.category = category;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "country")
    public Country getCountry() {
        return this.country;
    }

    public void setCountry(Country country) {
        this.country = country;
    }


    @Field(index= org.hibernate.search.annotations.Index.YES, analyze=Analyze.YES, store=Store.NO)
    @Column(name = "namePlaylist", nullable = false, length = 500)
    public String getNamePlaylist() {
        return this.namePlaylist;
    }

    public void setNamePlaylist(String namePlaylist) {
        this.namePlaylist = namePlaylist;
    }


    @Field(index= Index.YES, analyze=Analyze.YES, store=Store.NO)
    @Column(name = "keyWord", length = 500)
    public String getKeyWord() {
        return this.keyWord;
    }

    public void setKeyWord(String keyWord) {
        this.keyWord = keyWord;
    }


    @Column(name = "slugPlaylist", unique = true, length = 600)
    public String getSlugPlaylist() {
        return this.slugPlaylist;
    }

    public void setSlugPlaylist(String slugPlaylist) {
        this.slugPlaylist = slugPlaylist;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "postDate", nullable = false, length = 19)
    public Date getPostDate() {
        return this.postDate;
    }

    public void setPostDate(Date postDate) {
        this.postDate = postDate;
    }


    @Column(name = "viewCount")
    public Integer getViewCount() {
        return this.viewCount;
    }

    public void setViewCount(Integer viewCount) {
        this.viewCount = viewCount;
    }


    @Column(name = "likes")
    public Integer getLikes() {
        return this.likes;
    }

    public void setLikes(Integer likes) {
        this.likes = likes;
    }


    @Column(name = "linkImg", nullable = false, length = 500)
    public String getLinkImg() {
        return this.linkImg;
    }

    public void setLinkImg(String linkImg) {
        this.linkImg = linkImg;
    }


    @Column(name = "infoPlaylist", length = 4000)
    public String getInfoPlaylist() {
        return this.infoPlaylist;
    }

    public void setInfoPlaylist(String infoPlaylist) {
        this.infoPlaylist = infoPlaylist;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "PLAYLISTCONTENT", catalog = "musicweb", joinColumns = {
            @JoinColumn(name = "idPlaylist", nullable = false, updatable = false)}, inverseJoinColumns = {
            @JoinColumn(name = "idSong", nullable = false, updatable = false)})
    public List<Song> getSongs() {
        return this.songs;
    }

    public void setSongs(List<Song> songs) {
        this.songs = songs;
    }

    @IndexedEmbedded
    @ManyToMany(fetch = FetchType.EAGER)
    @JoinTable(name = "PLAYLIST_AUTHOR", catalog = "musicweb", joinColumns = {
            @JoinColumn(name = "idPlaylist", nullable = false, updatable = false)}, inverseJoinColumns = {
            @JoinColumn(name = "idSinger", nullable = false, updatable = false)})
    public List<Singer> getSingers() {
        return this.singers;
    }

    public void setSingers(List<Singer> singers) {
        this.singers = singers;
    }


    public String toJson(){
        return "{ \"namePlaylist\":\"" + namePlaylist + "\" , \"slugPlaylist\":\"" + slugPlaylist + "\"}";
    }

}


